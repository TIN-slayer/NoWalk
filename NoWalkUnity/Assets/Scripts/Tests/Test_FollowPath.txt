
using UnityEngine;
using System.Collections.Generic;

public class FollowPath : MonoBehaviour
{

    // Array of waypoints to walk from one to the next one
    //[SerializeField]
    private List<Transform> waypoints = new List<Transform>();

    // Walk speed that can be set in Inspector
    [SerializeField]
    private float moveSpeed = 2f;
    private int k = -1;

    // Index of current waypoint from which Enemy walks
    // to the next one
    private int waypointIndex = 0;

    // Use this for initialization
    private void Start()
    {

        // Set position of Enemy as position of the first waypoint
        Transform waypoint = transform.GetChild(0);
        int count = waypoint.childCount;
        print(waypoint.GetChild(1).position);
        for (int i = 0; i < count; i++)
            waypoints.Add(waypoint.GetChild(i));
        transform.position = waypoints[waypointIndex].position;
    }

    // Update is called once per frame
    private void FixedUpdate()
    {

        // Move Enemy
        Move();
    }

    // Method that actually make Enemy walk
    private void Move()
    {
        // If Enemy didn't reach last waypoint it can move
        // If enemy reached last waypoint then it stops
        // Move Enemy from current waypoint to the next one
        // using MoveTowards method
        transform.position = Vector2.MoveTowards(transform.position,
        waypoints[waypointIndex].position,
        moveSpeed * Time.deltaTime);

        // If Enemy reaches position of waypoint he walked towards
        // then waypointIndex is increased by 1
        // and Enemy starts to walk to the next waypoint
        
        if (transform.position == waypoints[waypointIndex].position)
        {
            if (waypointIndex == waypoints.Count - 1 || waypointIndex == 0)
            {
                k = -k;
                print(k);

            }
            waypointIndex += k;
        }       
    }
}